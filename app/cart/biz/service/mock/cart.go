// Code generated by MockGen. DO NOT EDIT.
package mock

import (
	"context"
	"reflect"

	"github.com/golang/mock/gomock"

	"TikTokMall/app/cart/kitex_gen/cart"
)

// MockCartService 是 CartService 接口的 mock 实现
type MockCartService struct {
	ctrl     *gomock.Controller
	recorder *MockCartServiceMockRecorder
}

// MockCartServiceMockRecorder 是 MockCartService 的记录器
type MockCartServiceMockRecorder struct {
	mock *MockCartService
}

// NewMockCartService 创建一个新的 mock 实例
func NewMockCartService(ctrl *gomock.Controller) *MockCartService {
	mock := &MockCartService{ctrl: ctrl}
	mock.recorder = &MockCartServiceMockRecorder{mock}
	return mock
}

// EXPECT 返回一个对象，允许调用者设置期望
func (m *MockCartService) EXPECT() *MockCartServiceMockRecorder {
	return m.recorder
}

// AddItem mock 实现
func (m *MockCartService) AddItem(ctx context.Context, req *cart.AddItemReq) (*cart.AddItemResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddItem", ctx, req)
	ret0, _ := ret[0].(*cart.AddItemResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddItem 指示期望的 AddItem 调用
func (mr *MockCartServiceMockRecorder) AddItem(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddItem", reflect.TypeOf((*MockCartService)(nil).AddItem), ctx, req)
}

// GetCart mock 实现
func (m *MockCartService) GetCart(ctx context.Context, req *cart.GetCartReq) (*cart.GetCartResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCart", ctx, req)
	ret0, _ := ret[0].(*cart.GetCartResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCart 指示期望的 GetCart 调用
func (mr *MockCartServiceMockRecorder) GetCart(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCart", reflect.TypeOf((*MockCartService)(nil).GetCart), ctx, req)
}

// EmptyCart mock 实现
func (m *MockCartService) EmptyCart(ctx context.Context, req *cart.EmptyCartReq) (*cart.EmptyCartResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EmptyCart", ctx, req)
	ret0, _ := ret[0].(*cart.EmptyCartResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EmptyCart 指示期望的 EmptyCart 调用
func (mr *MockCartServiceMockRecorder) EmptyCart(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EmptyCart", reflect.TypeOf((*MockCartService)(nil).EmptyCart), ctx, req)
} 